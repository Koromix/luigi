# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see https://www.gnu.org/licenses/.

nom_variable1 = 10
nom_variable2 = "hello"

size = [1, 58]
size[0] = 237
pos = { x = size[0] / 2, y = size[1] / 2 }
log(pos)
log(pos.x + 5)
pos.x = 8
log(pos.x + 5)

log(members(pos))
set(pos, 'x', 1111)
log(get(pos, 'x'))

# Opérateurs arithmétiques : +, -, *, /
# Opérateurs logiques : =, >, <, <=, >=
# Combinateurs : or, and

func inv(idx)
    return - idx
end

liste = [.1, 2.2,
         3.3, 4.4]
log(liste)
log(liste[inv(---1)])

if nom_variable1 = 11 - 1
    log("Cas 1")
else if nom_variable2 = "hello"
    log("Cas 2")
else
    log("Cas 3")
end

func somme(x, y)
    return x + y
end

func print_somme(x, y)
    log(somme(x, y))
end

func soyons_fous()
    log("Soyons fou" + "s")
end

log("Hello world")
print_somme(1 - (12 + 9), 2 * 19)
soyons_fous()

for item in liste
    log(item)
    if item > 2 then break
end
for item in []
    log(item)
end
for item in [2, 3, "hello"]
    log(item)
end

for idx in 0 to length(liste)
    log(idx + " = " + liste[idx])
end

idx = 0
while true
    idx = idx + 1
    log("WHILE " + idx)
    if idx < 6 then continue
    break
end

func get_func()
    return soyons_fous
end

fn = get_func()
fn()
log(params(fn))

# Lexer / scanneur:
# But : passer du text brut à une liste de tokens (items), avec chacun un type (chaine, nombre, =, <) et éventuellement une valeur
# [nom(nom_variable1), =, nombre(10), fin_de_ligne, nom(nom_variable2), =, chaine("hello"), ...]
